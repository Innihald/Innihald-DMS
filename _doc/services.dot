
digraph microservices {
    rankdir=LR;
    
    node[fillcolor="#FFCCBC" style="filled" fontcolor="black" shape=box];
    auth_api[label="Auth API"]; utility_api[label="Utility API"]; content_api[label="Content API"]; manage_api[label="Management API"];
    
    node[fillcolor="#FFCCEE" style="filled" fontcolor="black" shape=box];
    frontend_api[label="Frontend API"]; backend_api[label="Backend API"];
    
    node[fillcolor="#BCFFCC" style="filled" fontcolor="black" shape=ellipse];
    media[label="Media"]; content[label="Content"]; news[label="News"]; page[label="Page"]; user[label="User"]; event[label="Event"];
    
    node[fillcolor="#CCBCFF" style="filled" fontcolor="black" shape=cylinder];
    postgres[label="PostgreSQL"]; mongodb[label="Mongo DB"];config[label="Consul"];
    
    node[fillcolor="#AAEEFF" style="filled" fontcolor="black" shape=component];
    azure_storage[label="Azure Storage/S3"]
    
    
    subgraph api {
    
        content_api -> content
        content_api -> news
        content_api -> page
        content_api -> event
        
        utility_api -> media
        
        auth_api -> user
        
        manage_api -> user
        manage_api -> config
        
        frontend_api -> {content_api, utility_api, auth_api}
        backend_api -> {content_api, utility_api, manage_api}
    }
    
    subgraph repository {
        content -> user
        
        news -> content
        news -> media
        
        page -> content
        page -> media
        
        event -> content
        event -> news
        event -> media
        
        
    }
    
    
    subgraph database {
        content -> postgres;
        media -> mongodb;
        news -> postgres;
        page -> postgres;
        user -> postgres;
        
        event -> config
        user -> config
        media -> config
        news -> config
        content -> config
        page -> config
    }
    
    subgraph external_systems {
        media -> azure_storage
    }
}