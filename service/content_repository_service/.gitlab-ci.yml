#
# For general lifecycle information see https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html

variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--file ./service/content_repository_service --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

# This template uses jdk11 for verifying and deploying images
image: maven:3.6.2-jdk-11

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
    paths:
        - .m2/repository

crs_verify:
  stage: verify
  script:
    - mvn $MAVEN_CLI_OPTS verify

crs_test:
    stage: test
    script:
        - mvn $MAVEN_CLI_OPTS test

crs_package:
    stage: package
    script:
        - mvn $MAVEN_CLI_OPTS package
    artifacts:
        paths:
            - service/content_repository_service/target
        expire_in: 1 week

crs_docker:
    only:
        changes:
            - "*"
            - "service/content_repository_service/**/*"
    needs:
        - crs_verify
        - crs_test
        - crs_package
    stage: package_docker
    image: docker:19.03.1
    services:
        - name: docker:19.03.1-dind
          alias: docker
    variables:
        # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
        DOCKER_HOST: tcp://docker:2376
        DOCKER_TLS_CERTDIR: "/certs"
    script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker build -t $CI_REGISTRY/dren-tech/innihald/monorepo/content_repository_service:latest --file service/content_repository_service/src/main/docker/Dockerfile.jvm .
        - docker push $CI_REGISTRY/dren-tech/innihald/monorepo/content_repository_service:latest